do {
	capture_stdout();
   	do {
		if ((pid = fork()) < 0)
			exit(1);
	   	if (pid == 0) {
			do {
				origin_ret = printf("%d", 10);
		   		origin_buf = strdup(capture_stdout_get_buf());
			} while(0);
		   	exit(0);
	   	}
		wait(&pid);
	   	signaled = (((*(int *)&(pid)) & 0177) != 0177 && ((*(int *)&(pid)) & 0177) != 0);
   	} while(0);;
	origin_signaled = signaled;
   	do {
		if ((pid = fork()) < 0)
		   	exit(1);
	   	if (pid == 0) {
			do {
				user_ret = ft_printf("%d", 10);
		   		user_buf = strdup(capture_stdout_get_buf());
	   		} while(0);
		   	exit(0);
	   	} wait(&pid);
	   	signaled = (((*(int *)&(pid)) & 0177) != 0177 && ((*(int *)&(pid)) & 0177) != 0);
	} while(0);;
	capture_stdout_destroy();
	user_signaled = signaled;
} while (0);;
